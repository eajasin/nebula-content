// alphabetPosition = (text) => {
//   let textAsArray = text.split(" ")
//   let alphabet = ["a", "b", "c"]
//   for(i = 0; i < alphabet.length; i++){
//     if alphabet[i] === 
  
//   return text.indexOf[alphabet[i]]
// }
// }
let strin = "We wish you a Merry Christmas."
// const disemvowel = (str) => {
//   let vowels = "aeiou"
//   let newStr = ""
  
//   for(let i = 0; i < str.length; i++){
//       if(!vowels.includes(str[i].toLowerCase())){
               
//   } 
//   }  return newStr += str[i]  
// }

// console.log(disemvowel(strin))

// const disemvowel = (str) => {
//   return str.replace(/[aeiouAEIOU]/g, '');

// } candu

// console.log(disemvowel(strin))
// function median (array){
//   let indexOfMidNum = array.length / 2
//   if (array.length % 2 === 0){
//       return (array[indexOfMidNum] + array[indexOfMidNum - 1]) / 2
//   } else {
//       return (array[indexOfMidNum])
//   }
// }
//   console.log(median(footballTeamScores))

// let word = "candyi"
// const getMiddle = (s) => {
//   let index = s.length / 2
//        if (s.length % 2 === 0 ){
//           return s.charAt(index - 1) + s.charAt(index) 
                  
//       } else {
//   } return s.charAt(index)


// }

// console.log(getMiddle(word))

// let array = [-1, 2, 4, -9]

// const positiveSum = (arr) => {
//   let sum = 0 //arr => sum of nums
//   for(let i = 0; i < arr.length; i++){//loop through all nums in arr
//     if(arr[i] > 0) {
//       sum += arr[i] //consider and add only pos nums
//   } 
//   } return sum 
// }
// console.log(positiveSum(array))

// let string = "fjskhu"

// const accum = (s) => { //input s; convert to arr; output s  
//   let lowerString = s.toLowerCase() //make all letters lower-case  
//   let empArray = []	// push letters into empty array 
//     for(let i = 0; i < lowerString.length; i++){//iterate through each letter in lowercase
//     let repPart = lowerString[i].repeat(i+1) // repeat lowercase string by its index plus 1
//     let capString = repPart[0].toUpperCase() + repPart.slice(1)//capitalize 1st letter and adding on repeated part wit the cap letter sliced offf
//          empArray.push(capString)// add string with upper case and repeated part into empty array
//     } 
//     return empArray.join('-')//insert '-' between each capstring
//   }

// console.log(accum(string))

// const accum = (s) => {
//   let lowerString = s.toLowerCase()
//   for(i = 0; i < lowerString.length; i++){
//     let currLett = lowerString[i]
//     for(j = 0; j < ; j++){

//     }
//   }
  
// }



//Given a non-negative integer, 3 for example, return a string with a murmur: "1 sheep...2 sheep...3 sheep...". Input will always be valid, i.e. no negative integers.

let number = 3
     
// const countSheep = (num) => {
//   let sleepString = ""
//     for(let i = 1; i <= num; i++){ //iterate through all numbers up to num, starting at 1
//       sleepString += `${i} sheep...` //input all numbers into string, adding by 1 digit increments
//     }
//         return sleepString// add "..." alongside each number
//   } 

// //need to increase 
// console.log(countSheep(number))
  
//Take an array and remove every second element from the array. Always keep the first element and start removing with the next element.
/*
1) input array, output array
2) rermove second element
3) push the second-element-less element into a new array
*/

// let array = ["school", "shoes", "car", "candy", "cup", "church"]

// const removeEveryOther = (arr) => {
//   let newArr = []
//   for(let i = 0; i < arr.length; i+=2){
//       newArr.push(arr[i])
//     } return newArr
//   } 

// console.log(removeEveryOther(array))

/*array => number

return using min.max methods
*/

// let array = [2, 6, 90, 59, -3]

// const min = (list) => {
    
//     return Math.min(...list)
// }

// const max = (list) => {
    
//     return Math.max(...list)
// }

// console.log(max(array))

/*  -INPUT POSITION AND NUMBER
    - multiply rroll by two
    -add this figure position
    
*/

// const move = (position, roll) => {
//   return (roll * 2) + position
// }
// console.log(move(2,5))

// string=> string
//do reverse loop (i--, i > 0, start a)
//return string backwards
//
//let string = "bootcamp"

// const solution = (str) => {
//   let newStr = ""
//   for(let i = str.length-1; i >= 0; i--){
//       newStr += str[i]
//   } 
//     return newStr
// } 

// console.log(solution(string))

let str = "gdgjd dgjkdjg djgkdj"

// const noSpace = (x) => { //string => string
//   let newStr = ""  //placeholder string
//   for(i = 0; i < x.length; i++){ //loop through string 
//     if(x[i] !== " "){ //identifies the spaces
//      newStr += x[i]} //add non-spaces to new string
//   }
//   return newStr
// }  
  
// console.log(noSpace(str))
// let string = "bootcamp"

// const removeChar = (str) => { //string => string
//   let noFirstAndLast = str.slice(1, -1)//need to identify indices of first str[1] and last char str[-1] in string and extract their range
//      return noFirstAndLast 
//     }                                
  
// console.log(removeChar(string))   

// console.log(removeChar(string))
//   //return string with first and last index removed

let array = ["hay", "junk", "hay", "hay", "moreJunk", "needle", "randomJunk"]

const findNeedle = (haystack) => {  //array => string
                                    //iterate through array to find index of element "needle"
   for(let i = 0; i < haystack.length; i++){
    if(haystack[i] === "needle"){
      return "found the needle at position" +" "+ i
    }
   }
  //output string containing index of needle
}

console.log(findNeedle(array))
 
  
                                      



